<Page
    x:Class="Spotify.Uwp.Showcase.Pages.CurrentlyPlayingPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Spotify.Uwp.Showcase"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Style="{StaticResource TitleTextBlockStyle}" Margin="12,0,0,0" 
            Text="{Binding Item.Current.Name, FallbackValue='Currently Playing', TargetNullValue='Currently Playing'}" />
        
        <ContentControl Grid.Row="1" Margin="5" Content="{Binding Item}" 
        ContentTemplateSelector="{StaticResource PlayItemDetailsTemplateSelector}"/>
        
        <Pivot Grid.Row="2">
            <PivotItem Header="Devices">
                <Grid>
                    <ListView Margin="5" ItemsSource="{Binding Devices.Collection}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    ItemContainerStyle="{StaticResource ListViewStyle}"
                    ItemTemplate="{StaticResource DeviceItemTemplate}"/>
                    
                    <ProgressRing IsActive="{Binding Devices.Loading}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Height="64" Width="64" Visibility="{Binding Devices.Loading, 
                    Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </PivotItem>
        </Pivot>
        
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Grid.Column="0" VerticalAlignment="Center" Padding="5"
            Text="{Binding Item.ProgressTimeSpan, 
            Converter={StaticResource StringFormatConverter}, 
            ConverterParameter=' {0:hh\\:mm\\:ss}'}"/>
            
            <ProgressBar Grid.Column="1" VerticalAlignment="Center" 
            Minimum="0" Maximum="{Binding Item.Duration}" Value="{Binding Item.Progress}"/>
            
            <TextBlock Grid.Column="2" VerticalAlignment="Center" Padding="5"
            Text="{Binding Item.DurationTimeSpan, 
            Converter={StaticResource StringFormatConverter}, 
            ConverterParameter=' {0:hh\\:mm\\:ss}'}"/>
        </Grid>
        
        <CommandBar Grid.Row="4" IsOpen="True" IsSticky="True" 
            HorizontalAlignment="Stretch" VerticalAlignment="Bottom">

            <AppBarToggleButton Label="Shuffle"
                Command="{Binding Item.UserPlaybackShuffleCommand}" 
                CommandParameter="{Binding Item}"
                IsChecked="{Binding Item.ShuffleState, Mode=TwoWay}"
                IsEnabled="{Binding Item.Actions.Allows.IsTogglingShuffleAllowed}">
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="&#xE8B1;"/>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>

            <AppBarButton Label="Back"
                IsEnabled="{Binding Item.IsPlaying}"
                Command="{Binding UserPlaybackBackCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xED3C;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Previous"         
                Command="{Binding Item.UserPlaybackPreviousCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE100;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Pause" 
                Visibility="{Binding Item.Actions.Allows.IsPausingAllowed, 
                Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding Item.UserPlaybackPauseCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE103;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Resume" 
                Visibility="{Binding Item.Actions.Allows.IsResumingAllowed, 
                Converter={StaticResource BooleanToVisibilityConverter}}"
                Command="{Binding Item.UserPlaybackResumeCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE102;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Next" 
                Command="{Binding Item.UserPlaybackNextCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE101;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Forward"
                IsEnabled="{Binding Item.IsPlaying}"
                Command="{Binding UserPlaybackForwardCommand}" 
                CommandParameter="{Binding Item}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xED3D;"/>
                </AppBarButton.Icon>
            </AppBarButton>

            <AppBarButton Label="Repeat"
                IsEnabled="{Binding Item.Actions.Allows.IsTogglingRepeatAllowed}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE1CD;"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                <Flyout>
                    <StackPanel Orientation="Vertical">
                        <RadioButton Command="{Binding Item.UserPlaybackRepeatOffCommand}" 
                        IsChecked="{Binding Item.IsRepeatStateOff}"
                        GroupName="Repeat" Content="Off" />
                        
                        <RadioButton Command="{Binding Item.UserPlaybackRepeatTrackCommand}" 
                        IsChecked="{Binding Item.IsRepeatStateTrack}"
                        GroupName="Repeat" Content="Track" />
                        
                        <RadioButton Command="{Binding Item.UserPlaybackRepeatContextCommand}" 
                        IsChecked="{Binding Item.IsRepeatStateContext}"
                        GroupName="Repeat" Content="Context" />
                    </StackPanel>
                </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarButton Label="Volume" IsEnabled="{Binding Item.HasVolume}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE15D;"/>
                </AppBarButton.Icon>
                <AppBarButton.Flyout>
                    <Flyout>
                        <local:Slider Current="{Binding Item.Device.Volume, Mode=TwoWay}" 
                        Minimum="0" Maximum="100" 
                        Orientation="Horizontal"                     
                        ValueChangedCommand="{Binding Item.UserPlaybackVolumeCommand}"/>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Grid>
</Page>
